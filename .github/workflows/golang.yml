name: Go

on:
  push:
    branches: [ master ]
    paths-ignore:
    - 'ui/**'

  pull_request:
    branches: [ master ]
    paths-ignore:
    - 'ui/**'

jobs:

  validate:
    name: validate

    strategy:
      fail-fast: false
      matrix:
        project: [ api,  agent,  pkg,  ssh ]

    runs-on: ubuntu-latest

    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: 1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      working-directory: ${{ matrix.project }}
      run: go mod download

    - uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Run Revive Action
      uses: docker://morphy/revive-action:v1
      with:
        config: .revive.toml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Test
      working-directory: ${{ matrix.project }}
      run: go test -v ./...
    
    - name: SonarCloud Scan
      if: matrix.project == 'api'
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Build
      working-directory: ${{ matrix.project }}
      run: go build -v ./...

    - name: Build (with docker tag)
      if: matrix.project == 'agent'
      working-directory: ${{ matrix.project }}
      run: go build -tags docker -v ./...

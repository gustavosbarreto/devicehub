#!/bin/sh

. "$(dirname "$0")/utils"

readlink_f() {
    (if uname | grep -q 'Darwin'; then
	     # Use greadlink if available, otherwise it behaves like "readlink -f" option
         if command -v greadlink >/dev/null 2>&1; then
             greadlink -f "$1"
         else
	         target_file="$1"
	         cd "$(dirname "$target_file")"
	         target_file=$(basename "$target_file")

	         while [ -L "$target_file" ]
	         do
		         target_file=$(readlink "$target_file")
		         cd "$(dirname "$target_file")"
		         target_file=$(basename "$target_file")
	         done

	         echo "$(pwd -P)/$target_file"
         fi
     else
         readlink -f "$1"
     fi)
}

DOCKER_COMPOSE=$(evaluate_docker_compose)

WORKDIR=$(dirname $(readlink_f $0))/../

cd $WORKDIR

set -o allexport

env_override=${ENV_OVERRIDE:-./.env.override}
if [ -f "$env_override" ]; then
    echo "INFO: Loading $env_override"
    . "$env_override"
fi

set +o allexport

COMPOSE_FILE="docker-compose.yml"

[ "$SHELLHUB_AUTO_SSL" = "true" ] && COMPOSE_FILE="${COMPOSE_FILE}:docker-compose.autossl.yml"
[ "$SHELLHUB_ENV" = "development" ] && COMPOSE_FILE="${COMPOSE_FILE}:docker-compose.dev.yml"
[ "$SHELLHUB_ENTERPRISE" = "true" ] && [ "$SHELLHUB_ENV" != "development" ] && COMPOSE_FILE="${COMPOSE_FILE}:docker-compose.enterprise.yml"
[ "$SHELLHUB_CONNECTOR" = "true" ] && [ "$SHELLHUB_ENV" = "development" ] && COMPOSE_FILE="${COMPOSE_FILE}:docker-compose.connector.dev.yml"
[ "$SHELLHUB_CONNECTOR" = "true"  ] && [ "$SHELLHUB_ENV" != "development" ] && COMPOSE_FILE="${COMPOSE_FILE}:docker-compose.connector.yml"
[ -f docker-compose.override.yml ] && COMPOSE_FILE="${COMPOSE_FILE}:docker-compose.override.yml"

[ -f "$EXTRA_COMPOSE_FILE" ] && COMPOSE_FILE="${COMPOSE_FILE}:${EXTRA_COMPOSE_FILE}"

export COMPOSE_FILE

exec $DOCKER_COMPOSE "$@"

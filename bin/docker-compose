#!/bin/sh

readlink_f() {
    (if uname | grep -q 'Darwin'; then
	# Use greadlink if available, otherwise it behaves like "readlink -f" option
        if command -v greadlink >/dev/null 2>&1; then
            greadlink -f "$1"
        else
	    target_file="$1"
	    cd "$(dirname "$target_file")"
	    target_file=$(basename "$target_file")

	    while [ -L "$target_file" ]
	    do
		target_file=$(readlink "$target_file")
		cd "$(dirname "$target_file")"
		target_file=$(basename "$target_file")
	    done

	    echo "$(pwd -P)/$target_file"
        fi
    else
        readlink -f "$1"
    fi)
}

command -v docker-compose >/dev/null 2>&1 || { echo >&2 "ERROR: Please install docker-compose."; exit 1; }

WORKDIR=$(dirname $(readlink_f $0))/../

cd $WORKDIR

set -o allexport

[ -f .env.override ] && . ./.env.override

set +o allexport

COMPOSE_FILE="docker-compose.yml"

[ "$SHELLHUB_AUTO_SSL" = "true" ] && SSL_COMPOSE_FILE=autossl || SSL_COMPOSE_FILE=nossl

COMPOSE_FILE="${COMPOSE_FILE}:docker-compose.${SSL_COMPOSE_FILE}.yml"

if [ "$SHELLHUB_REDIRECT_TO_HTTPS" = "true" ]; then
    if [ "$SHELLHUB_AUTO_SSL" != "true" ]; then
	cat <<EOF >&2
ERROR: In order to enable HTTPS redirection, you need to have HTTPS enabled
EOF
	exit 1
    fi

    COMPOSE_FILE="${COMPOSE_FILE}:docker-compose.httptohttps.yml"
fi

[ "$SHELLHUB_STORE_CACHE" = "true" ] && COMPOSE_FILE="${COMPOSE_FILE}:docker-compose.cache.yml"
[ "$SHELLHUB_ENV" = "development" ] && COMPOSE_FILE="${COMPOSE_FILE}:docker-compose.dev.yml"
[ "$SHELLHUB_ENTERPRISE" = "true" ] && [ "$SHELLHUB_ENV" != "development" ] && COMPOSE_FILE="${COMPOSE_FILE}:docker-compose.enterprise.yml"
[ -f docker-compose.override.yml ] && COMPOSE_FILE="${COMPOSE_FILE}:docker-compose.override.yml"

[ -f "$EXTRA_COMPOSE_FILE" ] && COMPOSE_FILE="${COMPOSE_FILE}:${EXTRA_COMPOSE_FILE}"

export COMPOSE_FILE

docker-compose "$@"

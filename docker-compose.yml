version: '3.7'

services:
  ssh:
    image: shellhubio/ssh:${SHELLHUB_VERSION}
    restart: unless-stopped
    environment:
      - PRIVATE_KEY=/run/secrets/ssh_private_key
      - SHELLHUB_ENTERPRISE=${SHELLHUB_ENTERPRISE}
      - SHELLHUB_CLOUD=${SHELLHUB_CLOUD}
      - SHELLHUB_LOG_LEVEL=${SHELLHUB_LOG_LEVEL}
      - SHELLHUB_BILLING=${SHELLHUB_BILLING}
      - RECORD_URL=${SHELLHUB_RECORD_URL}
      - BILLING_URL=${SHELLHUB_BILLING_URL}
      - WEBHOOK_URL=${SHELLHUB_WEBHOOK_URL}
      - WEBHOOK_PORT=${SHELLHUB_WEBHOOK_PORT}
      - WEBHOOK_SCHEME=${SHELLHUB_WEBHOOK_SCHEME}
      - SSH_LOCAL_FORWARDING=${SHELLHUB_SSH_LOCAL_FORWARDING}
    ports:
      - "${SHELLHUB_SSH_PORT}:2222"
    secrets:
      - ssh_private_key
    networks:
      - shellhub
  api:
    image: shellhubio/api:${SHELLHUB_VERSION}
    restart: unless-stopped
    environment:
      - SHELLHUB_VERSION=${SHELLHUB_VERSION}
      - PRIVATE_KEY=/run/secrets/api_private_key
      - PUBLIC_KEY=/run/secrets/api_public_key
      - SHELLHUB_ENTERPRISE=${SHELLHUB_ENTERPRISE}
      - SHELLHUB_BILLING=${SHELLHUB_BILLING}
      - SHELLHUB_CLOUD=${SHELLHUB_CLOUD}
      - GEOIP=${SHELLHUB_GEOIP}
      - MAXMIND_LICENSE=${SHELLHUB_MAXMIND_LICENSE}
      - RECORD_RETENTION=${SHELLHUB_RECORD_RETENTION}
      - TELEMETRY=${SHELLHUB_TELEMETRY}
      - TELEMETRY_SCHEDULE=${SHELLHUB_TELEMETRY_SCHEDULE}
      - SESSION_RECORD_CLEANUP_SCHEDULE=${SHELLHUB_SESSION_RECORD_CLEANUP_SCHEDULE}
      - SHELLHUB_LOG_LEVEL=${SHELLHUB_LOG_LEVEL}
      - SENTRY_DSN=${SHELLHUB_SENTRY_DSN}
      - SHELLLHUB_ANNOUNCEMENTS=${SHELLLHUB_ANNOUNCEMENTS}
    depends_on:
      - mongo
    links:
      - mongo
    secrets:
      - api_private_key
      - api_public_key
    networks:
      - shellhub
  ui:
    image: shellhubio/ui:${SHELLHUB_VERSION}
    restart: unless-stopped
    environment:
      - SHELLHUB_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - SHELLHUB_BILLING=${SHELLHUB_BILLING}
      - SHELLHUB_ENTERPRISE=${SHELLHUB_ENTERPRISE}
      - SHELLHUB_CLOUD=${SHELLHUB_CLOUD}
    depends_on:
      - api
    networks:
      - shellhub
  new-ui:
    image: shellhubio/new-ui:${SHELLHUB_VERSION}
    restart: unless-stopped
    environment:
      - SHELLHUB_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - SHELLHUB_BILLING=${SHELLHUB_BILLING}
      - SHELLHUB_ENTERPRISE=${SHELLHUB_ENTERPRISE}
      - SHELLHUB_CLOUD=${SHELLHUB_CLOUD}
      - SHELLHUB_ANNOUNCEMENTS=${SHELLHUB_ANNOUNCEMENTS}
      - SHELLHUB_VERSION=${SHELLHUB_VERSION}
      - SHELLHUB_SENTRY_DSN=${SHELLHUB_SENTRY_DSN}
    networks:
      - shellhub
  gateway:
    image: shellhubio/gateway:${SHELLHUB_VERSION}
    restart: unless-stopped
    environment:
      - SHELLHUB_VERSION=${SHELLHUB_VERSION}
      - SHELLHUB_SSH_PORT=${SHELLHUB_SSH_PORT}
      - SHELLHUB_PROXY=${SHELLHUB_PROXY}
      - SHELLHUB_ENTERPRISE=${SHELLHUB_ENTERPRISE}
      - SHELLHUB_CLOUD=${SHELLHUB_CLOUD}
      - SHELLHUB_VUE_VERSION=${SHELLHUB_VUE_VERSION}
    depends_on:
      - api
      - ui
    networks:
      - shellhub
  cli:
    image: shellhubio/cli:${SHELLHUB_VERSION}
    entrypoint: /bin/sleep infinity
    restart: unless-stopped
    environment:
      - SHELLHUB_LOG_LEVEL=${SHELLHUB_LOG_LEVEL}
    depends_on:
      - api
      - mongo
    networks:
      - shellhub
  mongo:
    image: mongo:4.4.8
    restart: unless-stopped
    healthcheck:
      test: "test $$(echo \"rs.initiate({ _id: 'rs', members: [ { _id: 0, host: 'mongo:27017' } ] }).ok || rs.status().ok\" | mongo --quiet) -eq 1"
      interval: 30s
      start_period: 10s
    command: ["--replSet", "rs", "--bind_ip_all"]
    networks:
      - shellhub
  redis:
    image: redis
    restart: unless-stopped
    networks:
      - shellhub

secrets:
  ssh_private_key:
    file: ./ssh_private_key
  api_private_key:
    file: ./api_private_key
  api_public_key:
    file: ./api_public_key

networks:
  shellhub:
    name: shellhub_network

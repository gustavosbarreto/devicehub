server {
    listen 80;

    server_name _;

    location / {
        resolver 127.0.0.11 ipv6=off valid=10s;
        proxy_pass http://ui:8080;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

    location /api {
        resolver 127.0.0.11 ipv6=off valid=10s;
        auth_request /auth;
        auth_request_set $tenant_id $upstream_http_x_tenant_id;
        error_page 500 =401 /auth;
        rewrite ^/api/(.*)$ /$1 break;
        proxy_set_header X-Tenant-ID $tenant_id;
        proxy_pass http://api:8080;
    }

    location /api/devices/auth {
        resolver 127.0.0.11 ipv6=off valid=10s;
        auth_request off;
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://api:8080;
    }

    location /api/login {
        resolver 127.0.0.11 ipv6=off valid=10s;
        auth_request off;
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://api:8080;
    }

    location /auth {
        resolver 127.0.0.11 ipv6=off valid=10s;
        internal;
        proxy_pass http://api:8080;
    }

    location /ws {
        resolver 127.0.0.11 ipv6=off valid=10s;
        rewrite ^/ws/(.*)$ /$1 break;
        proxy_pass http://ws:8080;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

    location /endpoints {
        default_type application/json;

        content_by_lua_block {
            local host=ngx.var.http_host
            local ssh_port=os.getenv("SHELLHUB_SSH_PORT")
            local json = require('cjson')
            local data = {api=host, ssh=host .. ":" .. ssh_port, mqtt=host .. ":1883"}
            ngx.say(json.encode(data))
        }
    }

    location /install.sh {
        default_type "text/x-shellscript";

        content_by_lua_block {
            local host=ngx.var.http_host
            local tenant_id=ngx.var.arg_tenant_id
            local version=os.getenv("SHELLHUB_VERSION")
            ngx.say("docker run -d --name=shellhub --restart=unless-stopped --privileged --net=host --pid=host -v /:/host -e SERVER_ADDRESS=http://",host," -e PRIVATE_KEY=/host/etc/shellhub.key -e TENANT_ID=",tenant_id," shellhubio/agent:",version)
        }
    }
}
